#ifndef ExampleImageInverter_h
#define ExampleImageInverter_h

// The following header file is generated by CMake and thus it's located in
// the build directory. It provides an export macro for classes and functions
// that you want to be part of the public interface of your module.
#include <MitkExample3Exports.h>

#include <mitkImage.h>

#include <itkInvertIntensityImageFilter.h>

namespace captk {
/** \class Example Inverter
 *  \brief Workshop Example Inverter Module API
 *  This is a simple module to show how modules can be invoked from plugins.
 *  This class acts as a wrapper for the ITK filter.
 */
class MITKEXAMPLE3_EXPORT ExampleImageInverter
{
	/** \brief  This class is basically a filter wrapper, so
		 * we COULD inherit from mitk::ImageToImageFilter.
		 * While this would be better design, there is some code level overhead,
		 * and that would distract from the point of this example.
		 * So we'll keep it simpler (and hopefully clearer) by just using a
		 * few familiar functions.
		 */
public:
	ExampleImageInverter();

	~ExampleImageInverter() {}

	// ITK-filter-like functions
	void SetInput(mitk::Image::Pointer inImagePtr);
	void Update();
	mitk::Image::Pointer GetOutput();

protected:
	mitk::Image::Pointer m_InputPtr;
	mitk::Image::Pointer m_LastOutput;

};


}

#endif // ! ExampleImageInverter_h
